//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "RCCustomerServiceReceiveMessageDelegate-Protocol.h"

@class NSMutableDictionary, NSString, RCPushProfile, RCTSMutableDictionary, RCUserInfo;
@protocol RCWatchKitStatusDelegate;

@interface RCIMClient : NSObject <RCCustomerServiceReceiveMessageDelegate>
{
    _Bool _kickEnable;
    unsigned long long _sdkRunningMode;
    id <RCWatchKitStatusDelegate> _watchKitStatusDelegate;
    RCUserInfo *_currentUserInfo;
    unsigned long long _logLevel;
    NSString *_appKey;
    NSString *_currentToken;
    NSString *_currentUserId;
    NSString *_deviceId;
    NSString *_voipDeviceToken;
    NSString *_naviServer;
    NSString *_fileServer;
    struct RCReceiveMessageListener *_rcListener;
    struct RCFilterListener *_rcFilterListener;
    struct RCConnectionStatusChangeListener *_rcConnectExceptionListener;
    struct RCConnectAckListener *_rcConnectAckListener;
    struct RCConnectionCollectionListener *_rcConnectionCollectionListener;
    RCTSMutableDictionary *_cacheChatRoomDict;
    NSMutableDictionary *_customerServiceSessions;
    NSString *_kefuId;
    unsigned long long _currentCSModeType;
    long long _handShakeMessageSendTime;
    NSMutableDictionary *_conversationNotifyCache;
    NSMutableDictionary *_mediaDownloadDict;
    NSMutableDictionary *_mediaSendingDict;
    NSString *_currentConnectServerInfo;
    RCPushProfile *_pushSetting;
}

+ (id)sharedRCIMClient;
@property(nonatomic) _Bool kickEnable; // @synthesize kickEnable=_kickEnable;
@property(retain, nonatomic) RCPushProfile *pushSetting; // @synthesize pushSetting=_pushSetting;
@property(retain, nonatomic) NSString *currentConnectServerInfo; // @synthesize currentConnectServerInfo=_currentConnectServerInfo;
@property(retain, nonatomic) NSMutableDictionary *mediaSendingDict; // @synthesize mediaSendingDict=_mediaSendingDict;
@property(retain, nonatomic) NSMutableDictionary *mediaDownloadDict; // @synthesize mediaDownloadDict=_mediaDownloadDict;
@property(retain, nonatomic) NSMutableDictionary *conversationNotifyCache; // @synthesize conversationNotifyCache=_conversationNotifyCache;
@property(nonatomic) long long handShakeMessageSendTime; // @synthesize handShakeMessageSendTime=_handShakeMessageSendTime;
@property(nonatomic) unsigned long long currentCSModeType; // @synthesize currentCSModeType=_currentCSModeType;
@property(copy, nonatomic) NSString *kefuId; // @synthesize kefuId=_kefuId;
@property(retain, nonatomic) NSMutableDictionary *customerServiceSessions; // @synthesize customerServiceSessions=_customerServiceSessions;
@property(retain, nonatomic) RCTSMutableDictionary *cacheChatRoomDict; // @synthesize cacheChatRoomDict=_cacheChatRoomDict;
@property(nonatomic) struct RCConnectionCollectionListener *rcConnectionCollectionListener; // @synthesize rcConnectionCollectionListener=_rcConnectionCollectionListener;
@property(nonatomic) struct RCConnectAckListener *rcConnectAckListener; // @synthesize rcConnectAckListener=_rcConnectAckListener;
@property(nonatomic) struct RCConnectionStatusChangeListener *rcConnectExceptionListener; // @synthesize rcConnectExceptionListener=_rcConnectExceptionListener;
@property(nonatomic) struct RCFilterListener *rcFilterListener; // @synthesize rcFilterListener=_rcFilterListener;
@property(nonatomic) struct RCReceiveMessageListener *rcListener; // @synthesize rcListener=_rcListener;
@property(retain, nonatomic) NSString *fileServer; // @synthesize fileServer=_fileServer;
@property(retain, nonatomic) NSString *naviServer; // @synthesize naviServer=_naviServer;
@property(retain, nonatomic) NSString *voipDeviceToken; // @synthesize voipDeviceToken=_voipDeviceToken;
@property(retain, nonatomic) NSString *deviceId; // @synthesize deviceId=_deviceId;
@property(retain, nonatomic) NSString *currentUserId; // @synthesize currentUserId=_currentUserId;
@property(retain, nonatomic) NSString *currentToken; // @synthesize currentToken=_currentToken;
@property(retain, nonatomic) NSString *appKey; // @synthesize appKey=_appKey;
@property(nonatomic) unsigned long long logLevel; // @synthesize logLevel=_logLevel;
@property(retain, nonatomic) RCUserInfo *currentUserInfo; // @synthesize currentUserInfo=_currentUserInfo;
@property(retain, nonatomic) id <RCWatchKitStatusDelegate> watchKitStatusDelegate; // @synthesize watchKitStatusDelegate=_watchKitStatusDelegate;
@property(readonly, nonatomic) unsigned long long sdkRunningMode; // @synthesize sdkRunningMode=_sdkRunningMode;
- (void).cxx_destruct;
- (void)setGlobalConnectionStatus:(long long)arg1;
- (_Bool)isValidSearchType:(unsigned long long)arg1;
- (_Bool)isValidPublicServiceType:(unsigned long long)arg1;
- (_Bool)isValidSentStatus:(unsigned long long)arg1;
- (_Bool)isValidConversationType:(unsigned long long)arg1;
- (void)setAppVer:(id)arg1;
- (id)getFirstUnreadMessage:(unsigned long long)arg1 targetId:(id)arg2;
- (int)getOfflineMessageDuration;
- (void)setOfflineMessageDuration:(int)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) RCPushProfile *pushProfile;
- (void)getVendorToken:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2;
- (void)deleteMessages:(unsigned long long)arg1 targetId:(id)arg2 messages:(id)arg3 isDeleteLocal:(_Bool)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (void)deleteMessages:(unsigned long long)arg1 targetId:(id)arg2 messages:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (id)searchConversations:(id)arg1 messageType:(id)arg2 keyword:(id)arg3;
- (id)searchMessages:(unsigned long long)arg1 targetId:(id)arg2 keyword:(id)arg3 count:(int)arg4 startTime:(long long)arg5;
- (basic_string_7c0a1c0b)getSearchableWords:(id)arg1;
- (void)setUserOnlineStatus:(int)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)getUserOnlineStatus:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)syncConversationReadStatus:(unsigned long long)arg1 targetId:(id)arg2 time:(long long)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)sendReadReceiptResponse:(unsigned long long)arg1 targetId:(id)arg2 messageList:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)sendReadReceiptRequest:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) NSString *fileStoragePath;
- (id)getUnreadMentionedMessages:(unsigned long long)arg1 targetId:(id)arg2;
- (void)setRCLogInfoDelegate:(id)arg1;
- (void)deleteMessages:(unsigned long long)arg1 targetId:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (_Bool)onCustomerServiceMessageReceived:(id)arg1;
- (void)notifyCustomerService:(id)arg1 warning:(id)arg2 saveToDB:(_Bool)arg3;
- (void)leaveMessageCustomerService:(id)arg1 leaveMessageDic:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)evaluateCustomerService:(id)arg1 dialogId:(id)arg2 starValue:(int)arg3 suggest:(id)arg4 resolveStatus:(unsigned long long)arg5 tagText:(id)arg6 extra:(id)arg7;
- (void)evaluateCustomerService:(id)arg1 dialogId:(id)arg2 starValue:(int)arg3 suggest:(id)arg4 resolveStatus:(unsigned long long)arg5;
- (void)evaluateCustomerService:(id)arg1 dialogId:(id)arg2 humanValue:(int)arg3 suggest:(id)arg4;
- (void)evaluateCustomerService:(id)arg1 knownledgeId:(id)arg2 robotValue:(_Bool)arg3 suggest:(id)arg4;
- (void)switchToHumanMode:(id)arg1;
- (void)sendChangeModelMessage:(id)arg1 withGroupId:(id)arg2;
- (void)selectCustomerServiceGroup:(id)arg1 withGroupId:(id)arg2;
- (void)stopCustomerService:(id)arg1;
- (void)getHumanEvaluateCustomerServiceConfig:(CDUnknownBlockType)arg1;
- (void)startCustomerService:(id)arg1 info:(id)arg2 onSuccess:(CDUnknownBlockType)arg3 onError:(CDUnknownBlockType)arg4 onModeType:(CDUnknownBlockType)arg5 onPullEvaluation:(CDUnknownBlockType)arg6 onSelectGroup:(CDUnknownBlockType)arg7 onQuit:(CDUnknownBlockType)arg8;
- (void)sendTypingStatus:(unsigned long long)arg1 targetId:(id)arg2 contentType:(id)arg3;
- (id)getCurrentTypingStatus:(unsigned long long)arg1 targetId:(id)arg2;
- (void)setRCTypingStatusDelegate:(id)arg1;
- (id)encodeWAVEToAMR:(id)arg1 channel:(int)arg2 nBitsPerSample:(int)arg3;
- (id)decodeAMRToWAVEWithoutHeader:(id)arg1;
- (id)decodeAMRToWAVE:(id)arg1;
- (void)sendReadReceiptMessage:(unsigned long long)arg1 targetId:(id)arg2 time:(long long)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)recallMessage:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)recallMessage:(id)arg1 pushContent:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (id)getMessageByUId:(id)arg1;
- (id)getMessage:(long long)arg1;
- (long long)getMessageSendTime:(long long)arg1;
- (id)getPushExtraFromRemoteNotification:(id)arg1;
- (id)getPushExtraFromLaunchOptions:(id)arg1;
- (void)recordRemoteNotificationEvent:(id)arg1;
- (void)recordLocalNotificationEvent:(id)arg1;
- (void)recordLaunchOptionsEvent:(id)arg1;
- (void)recordUserDetails:(id)arg1;
- (void)recordLocation:(double)arg1 longitude:(double)arg2;
- (void)recordEvent:(id)arg1 segmentation:(id)arg2 count:(int)arg3 sum:(double)arg4;
- (void)recordEvent:(id)arg1 segmentation:(id)arg2 count:(int)arg3;
- (void)recordEvent:(id)arg1 count:(int)arg2 sum:(double)arg3;
- (void)recordEvent:(id)arg1 count:(int)arg2;
- (int)getMessageCount:(unsigned long long)arg1 targetId:(id)arg2;
- (void)getRemoteChatroomHistoryMessages:(id)arg1 recordTime:(long long)arg2 count:(int)arg3 order:(unsigned long long)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (void)clearRemoteHistoryMessages:(unsigned long long)arg1 targetId:(id)arg2 recordTime:(long long)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)getRemoteHistoryMessages:(unsigned long long)arg1 targetId:(id)arg2 recordTime:(long long)arg3 count:(int)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (long long)getConnectionStatus;
- (_Bool)isRCIMKitExist;
- (void)clearCurrentToken;
- (id)getPublicServiceWebViewController:(id)arg1;
- (id)getPublicServiceList;
- (void)getPublicServiceProfile:(id)arg1 conversationType:(unsigned long long)arg2 onSuccess:(CDUnknownBlockType)arg3 onError:(CDUnknownBlockType)arg4;
- (id)getPublicServiceProfile:(unsigned long long)arg1 publicServiceId:(id)arg2;
- (void)unsubscribePublicService:(unsigned long long)arg1 publicServiceId:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)subscribePublicService:(unsigned long long)arg1 publicServiceId:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)searchPublicServiceByType:(unsigned long long)arg1 searchType:(unsigned long long)arg2 searchKey:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)searchPublicService:(unsigned long long)arg1 searchKey:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)getNotificationQuietHours:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2;
- (void)removeConversationNotificationQuietHours:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2;
- (void)setConversationNotificationQuietHours:(id)arg1 spanMins:(int)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)removeNotificationQuietHours:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2;
- (void)setNotificationQuietHours:(id)arg1 spanMins:(int)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)getVoIPMediaChannelInfo:(long long)arg1 channelId:(id)arg2 channelExtra:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)uploadVoIPDeviceToken:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2;
- (void)setDeviceInfo;
- (void)getBlacklist:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2;
- (void)getBlacklistStatus:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)removeFromBlacklist:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)addToBlacklist:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (unsigned long long)getCurrentNetworkStatus;
- (void)setRCConnectionStatusChangeDelegate:(id)arg1;
- (void)setEnviromentChangedListener:(unsigned long long)arg1;
- (void)getChatRoomInfo:(id)arg1 count:(int)arg2 order:(unsigned long long)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)quitChatRoom:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)joinExistChatRoom:(id)arg1 messageCount:(int)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)joinChatRoom:(id)arg1 messageCount:(int)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)quitGroup:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)joinGroup:(id)arg1 groupName:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)syncGroups:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)setDiscussionInviteStatus:(id)arg1 isOpen:(_Bool)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (id)getBlockedConversationList:(id)arg1;
- (void)setConversationNotificationStatus:(unsigned long long)arg1 targetId:(id)arg2 isBlocked:(_Bool)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)getConversationNotificationStatus:(unsigned long long)arg1 targetId:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)quitDiscussion:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)removeMemberFromDiscussion:(id)arg1 userId:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)addMemberToDiscussion:(id)arg1 userIdList:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)createDiscussion:(id)arg1 userIdList:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)setDiscussionName:(id)arg1 name:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)getDiscussion:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (_Bool)clearTextMessageDraft:(unsigned long long)arg1 targetId:(id)arg2;
- (_Bool)saveTextMessageDraft:(unsigned long long)arg1 targetId:(id)arg2 content:(id)arg3;
- (id)getTextMessageDraft:(unsigned long long)arg1 targetId:(id)arg2;
- (_Bool)setMessageSentStatus:(long long)arg1 sentStatus:(unsigned long long)arg2;
- (_Bool)setMessageReceivedStatus:(long long)arg1 receivedStatus:(unsigned long long)arg2;
- (_Bool)setMessageExtra:(long long)arg1 value:(id)arg2;
- (_Bool)clearConversations:(id)arg1;
- (_Bool)clearMessagesUnreadStatus:(unsigned long long)arg1 targetId:(id)arg2 time:(long long)arg3;
- (_Bool)clearMessagesUnreadStatus:(unsigned long long)arg1 targetId:(id)arg2;
- (_Bool)clearMessages:(unsigned long long)arg1 targetId:(id)arg2;
- (_Bool)deleteMessages:(id)arg1;
- (id)getHistoryMessages:(unsigned long long)arg1 targetId:(id)arg2 sentTime:(long long)arg3 beforeCount:(int)arg4 afterCount:(int)arg5;
- (id)getHistoryMessages:(unsigned long long)arg1 targetId:(id)arg2 objectNames:(id)arg3 sentTime:(long long)arg4 isForward:(_Bool)arg5 count:(int)arg6;
- (id)getHistoryMessages:(unsigned long long)arg1 targetId:(id)arg2 objectName:(id)arg3 baseMessageId:(long long)arg4 isForward:(_Bool)arg5 count:(int)arg6;
- (id)getHistoryMessages:(unsigned long long)arg1 targetId:(id)arg2 objectName:(id)arg3 oldestMessageId:(long long)arg4 count:(int)arg5;
- (id)getHistoryMessages:(unsigned long long)arg1 targetId:(id)arg2 oldestMessageId:(long long)arg3 count:(int)arg4;
- (id)getLatestMessages:(unsigned long long)arg1 targetId:(id)arg2 count:(int)arg3;
- (int)getUnreadMentionedCount:(id)arg1;
- (int)getUnreadCount:(id)arg1;
- (int)getTotalUnreadCount:(id)arg1;
- (int)getUnreadCount:(unsigned long long)arg1 targetId:(id)arg2;
- (int)getTotalUnreadCount;
- (id)getTopConversationList:(id)arg1;
- (_Bool)setConversationToTop:(unsigned long long)arg1 targetId:(id)arg2 isTop:(_Bool)arg3;
- (_Bool)removeConversation:(unsigned long long)arg1 targetId:(id)arg2;
- (id)getConversation:(unsigned long long)arg1 targetId:(id)arg2;
- (id)getConversationList:(id)arg1 count:(int)arg2 startTime:(long long)arg3;
- (id)getConversationList:(id)arg1;
- (void)getUserInfo:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (id)getReceiveMsgDelegate;
- (void)receiveFakeMessage:(id)arg1;
- (_Bool)cancelDownloadMediaMessage:(long long)arg1;
- (void)downloadMediaMessage:(long long)arg1 progress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4 cancel:(CDUnknownBlockType)arg5;
- (void)downloadMediaFile:(unsigned long long)arg1 targetId:(id)arg2 mediaType:(unsigned long long)arg3 mediaUrl:(id)arg4 progress:(CDUnknownBlockType)arg5 success:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7;
- (id)moveSightFileToCache:(id)arg1;
- (id)saveImageMessageToFile:(id)arg1;
- (_Bool)cancelSendMediaMessage:(long long)arg1;
- (id)sendMediaMessage:(unsigned long long)arg1 targetId:(id)arg2 content:(id)arg3 pushContent:(id)arg4 pushData:(id)arg5 uploadPrepare:(CDUnknownBlockType)arg6 progress:(CDUnknownBlockType)arg7 success:(CDUnknownBlockType)arg8 error:(CDUnknownBlockType)arg9 cancel:(CDUnknownBlockType)arg10;
- (id)sendMediaMessage:(unsigned long long)arg1 targetId:(id)arg2 content:(id)arg3 pushContent:(id)arg4 pushData:(id)arg5 progress:(CDUnknownBlockType)arg6 success:(CDUnknownBlockType)arg7 error:(CDUnknownBlockType)arg8 cancel:(CDUnknownBlockType)arg9;
- (_Bool)isUploadedMediaMessage:(id)arg1;
- (id)sendDirectionalMessage:(unsigned long long)arg1 targetId:(id)arg2 toUserIdList:(id)arg3 content:(id)arg4 pushContent:(id)arg5 pushData:(id)arg6 successBlock:(CDUnknownBlockType)arg7 errorBlock:(CDUnknownBlockType)arg8;
- (id)sendMessage:(unsigned long long)arg1 targetId:(id)arg2 content:(id)arg3 pushContent:(id)arg4 pushData:(id)arg5 successBlock:(CDUnknownBlockType)arg6 errorBlock:(CDUnknownBlockType)arg7;
- (long long)transferTypeOfMessageContent:(id)arg1;
- (unsigned long long)persistentFlagOfMessageContent:(id)arg1;
- (id)payloadOfMessageContent:(id)arg1;
- (id)sendDirectionalMessage:(unsigned long long)arg1 targetId:(id)arg2 toUserIdList:(id)arg3 content:(id)arg4 pushContent:(id)arg5 pushData:(id)arg6 success:(CDUnknownBlockType)arg7 error:(CDUnknownBlockType)arg8;
- (id)sendSavedMessage:(id)arg1 object:(id)arg2 pushContent:(id)arg3 pushData:(id)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (id)sendMessage:(unsigned long long)arg1 targetId:(id)arg2 content:(id)arg3 pushContent:(id)arg4 pushData:(id)arg5 success:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7;
- (id)insertMessage:(unsigned long long)arg1 targetId:(id)arg2 senderUserId:(id)arg3 sendStatus:(unsigned long long)arg4 content:(id)arg5;
- (id)insertIncomingMessage:(unsigned long long)arg1 targetId:(id)arg2 senderUserId:(id)arg3 receivedStatus:(unsigned long long)arg4 content:(id)arg5 sentTime:(long long)arg6;
- (id)insertOutgoingMessage:(unsigned long long)arg1 targetId:(id)arg2 sentStatus:(unsigned long long)arg3 content:(id)arg4 sentTime:(long long)arg5;
- (id)insertIncomingMessage:(unsigned long long)arg1 targetId:(id)arg2 senderUserId:(id)arg3 receivedStatus:(unsigned long long)arg4 content:(id)arg5;
- (id)insertOutgoingMessage:(unsigned long long)arg1 targetId:(id)arg2 sentStatus:(unsigned long long)arg3 content:(id)arg4;
- (id)sendImageMessage:(unsigned long long)arg1 targetId:(id)arg2 content:(id)arg3 pushContent:(id)arg4 pushData:(id)arg5 uploadPrepare:(CDUnknownBlockType)arg6 progress:(CDUnknownBlockType)arg7 success:(CDUnknownBlockType)arg8 error:(CDUnknownBlockType)arg9;
- (id)sendImageMessage:(unsigned long long)arg1 targetId:(id)arg2 content:(id)arg3 pushContent:(id)arg4 pushData:(id)arg5 progress:(CDUnknownBlockType)arg6 success:(CDUnknownBlockType)arg7 error:(CDUnknownBlockType)arg8;
- (id)sendImageMessage:(unsigned long long)arg1 targetId:(id)arg2 content:(id)arg3 pushContent:(id)arg4 progress:(CDUnknownBlockType)arg5 success:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7;
- (id)sendMessage:(unsigned long long)arg1 targetId:(id)arg2 content:(id)arg3 pushContent:(id)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (void)asyncProcessInMainThread:(CDUnknownBlockType)arg1;
- (void)syncProcessInMainThread:(CDUnknownBlockType)arg1;
- (long long)getDeltaTime;
- (id)getSDKVersion;
- (void)setReconnectKickEnable:(_Bool)arg1;
- (void)logout;
- (void)disconnect;
- (void)disconnect:(_Bool)arg1;
- (void)clearConnectTimer;
- (void)connectTimerExpired;
- (void)notifyChatRoomStatus:(id)arg1 status:(long long)arg2 errorCode:(int)arg3;
- (void)setChatRoomStatusDelegate:(id)arg1;
- (void)rejoinCacheChatRoom;
- (void)rejoinChatRoom:(id)arg1 existOnly:(_Bool)arg2 messageCount:(int)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (id)getUserIdByCurrentToken;
- (id)getUserIdByToken:(id)arg1;
- (void)reconnect:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2;
- (void)reconnect;
- (void)reconnectForVoIPPush;
- (void)startRetryForVoIPPush;
- (void)startRetry;
- (void)stopRetry;
- (void)resetCacheChatRoomForFailed;
- (void)startChatRoomRejoinTimer;
- (void)stopChatRoomRejoinTimer;
- (void)sendChatRoomHeartbeat;
- (void)setReceiveMessageDelegate:(id)arg1 object:(id)arg2;
- (void)updateCmp:(_Bool)arg1 retry:(_Bool)arg2 naviURL:(id)arg3;
- (void)updateCmp:(_Bool)arg1 retry:(_Bool)arg2;
- (id)getCachedCmps:(id)arg1;
- (void)connect:(_Bool)arg1;
- (void)checkCmp:(_Bool)arg1;
- (void)connect:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3 tokenIncorrect:(CDUnknownBlockType)arg4;
- (void)connectWithToken:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3 tokenIncorrect:(CDUnknownBlockType)arg4;
- (void)setVoIPDeviceToken:(id)arg1;
- (_Bool)setStatisticServer:(id)arg1;
- (_Bool)setServerInfo:(id)arg1 fileServer:(id)arg2;
- (void)setDeviceToken:(id)arg1;
- (void)updateConnectingUserInfo:(id)arg1;
- (id)getSignalMessageClassList;
- (void)registerAllSignalMessage;
- (void)registerMessageType:(Class)arg1;
- (void)networkChanged:(id)arg1;
- (_Bool)isValidUser;
- (void)handleAppTerminate;
- (void)handleAppResume;
- (void)delayEndBackgroundTask;
- (void)delaySuspend;
- (void)handleAppSuspend;
- (void)moveDBFile;
- (void)moveFile:(id)arg1 fromPath:(id)arg2 toPath:(id)arg3;
- (void)initIMClientWithAppKey:(id)arg1;
- (void)init:(id)arg1;
- (void)initWithAppKey:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

