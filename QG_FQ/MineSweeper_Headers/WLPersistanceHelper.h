//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FMDatabase, FMDatabaseQueue, NSRecursiveLock, NSString;

@interface WLPersistanceHelper : NSObject
{
    NSString *_encryptionKey;
    NSRecursiveLock *_threadLock;
    FMDatabase *_usingdb;
    FMDatabaseQueue *_bindingQueue;
    NSString *_dbPath;
}

+ (id)dbHelperWithPath:(id)arg1 save:(id)arg2;
+ (id)getDBPathWithDBName:(id)arg1;
+ (id)sharedInstance;
@property(copy, nonatomic) NSString *dbPath; // @synthesize dbPath=_dbPath;
@property(retain, nonatomic) FMDatabaseQueue *bindingQueue; // @synthesize bindingQueue=_bindingQueue;
@property(retain, nonatomic) FMDatabase *usingdb; // @synthesize usingdb=_usingdb;
@property(retain, nonatomic) NSRecursiveLock *threadLock; // @synthesize threadLock=_threadLock;
- (void).cxx_destruct;
- (void)fixSqlColumnsWithTable:(id)arg1;
- (_Bool)_createTableWithModelClass:(id)arg1 tableName:(id)arg2 QueryCommand:(id)arg3;
- (_Bool)dropTableWithTableName:(id)arg1;
- (_Bool)dropTableWithTable:(id)arg1;
- (void)dropAllTable;
- (_Bool)getTableCreatedWithTableName:(id)arg1;
- (_Bool)getTableCreatedWithTable:(id)arg1;
- (_Bool)createTableCreatedWithTable:(id)arg1 QueryCommand:(id)arg2;
- (id)executeResult:(id)arg1 Class:(id)arg2 tableName:(id)arg3;
- (id)executeOneColumnResult:(id)arg1;
- (void)sqlString:(id)arg1 groupBy:(id)arg2 orderBy:(id)arg3 offset:(long long)arg4 count:(long long)arg5;
- (id)extractQueryWithSqlString:(id)arg1 table:(id)arg2;
- (_Bool)updateToDB:(id)arg1 QueryCommand:(id)arg2;
- (id)searchWithRAWSQL:(id)arg1 toClass:(id)arg2;
- (id)executeScalarWithSQL:(id)arg1 arguments:(id)arg2;
- (_Bool)executeSQL:(id)arg1 arguments:(id)arg2;
- (void)executeForTransaction:(CDUnknownBlockType)arg1;
- (void)executeDB:(CDUnknownBlockType)arg1;
- (id)lastInsertRowId;
- (_Bool)rekey:(id)arg1;
- (_Bool)setKey:(id)arg1;
@property(readonly, copy, nonatomic) NSString *encryptionKey; // @synthesize encryptionKey=_encryptionKey;
- (void)setDataBasePath:(id)arg1;
- (void)setDataBaseName:(id)arg1;
- (id)initWithDataBasePath:(id)arg1;
- (id)initWithDataBaseName:(id)arg1;
- (void)dealloc;
- (void)deleteLocalProtoryCacheDatas;

@end

